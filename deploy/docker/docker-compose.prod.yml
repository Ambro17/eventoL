version: "2"
services:
  daphne:
    restart: always
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
    expose:
      - "8000"
    depends_on:
      - worker
      - redis
      - elasticsearch
      - logstash
    env_file:
      - .env
    environment:
      - DJANGO_CONFIGURATION=Prod
    command: bash -c "cd eventol; daphne -b 0.0.0.0 -p 8000 eventol.asgi:channel_layer"
  worker:
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
    volumes:
      - /usr/src/app
    environment:
      - DJANGO_CONFIGURATION=Prod
    command: /root/wait-for-it.sh -p 5432 -h postgres -t 40 -- ./start_eventol.sh
  nginx:
    restart: always
    build: ./nginx/
    depends_on:
      - daphne
      - worker
    volumes_from:
      - worker
    environment:
      - VIRTUAL_HOST=${HOST}
  postgres:
    restart: always
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_DB=${PSQL_DBNAME}
    expose:
      - "5432"
    volumes:
      - /srv/deploys/eventolpostgres:/var/lib/postgresql/data
  elasticsearch:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch-basic:6.2.1
    volumes:
      - ./elk/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
    expose:
      - "9300"
      - "9200"
  logstash:
    restart: always
    image: docker.elastic.co/logstash/logstash-x-pack:6.2.1
    volumes:
      - ./elk/logstash/config:/usr/share/logstash/config:ro
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
    depends_on:
      - elasticsearch
    expose:
      - "5000"
  kibana:
    restart: always
    image: docker.elastic.co/kibana/kibana-x-pack:6.2.1
    volumes:
      - ./elk/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      - VIRTUAL_HOST=${KIBANA_EXTERNAL_HOST}
      - VIRTUAL_PORT=5601
    expose:
      - "5601"
    depends_on:
      - elasticsearch
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "${EXTERNAL_PORT}:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
